}
}
return(noquote(p_report))
}
report_p(.03455, markdown = F)
report_p(.03455, markdown = T)
install.packages("devtools")
library(devtools)
devtools::document()
devtools::document()
devtools::load_all()
devtools::document()
devtools::load_all()
packrat::init()
library(packrat)
packrat::init()
packrat::init()
devtools::document()
library(devtools)
install.packages("devtools")
devtools::document()
devtools::document()
library(report)
library(report)
devtools::install_github("durkeepk/report")
devtools::install_github("durkeepk/report")
file.exists("~/.ssh/id_rsa.pub")
devtools::document()
library(report)
report_b <- function(coefficient = NULL, markdown = T, standardize = F){
if(markdown == T){
bval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", coefficient))
if(standardize == F){
b_report <- paste("*b* =", bval)
}
if(standardize == F){
b_report <- paste("\beta", " = ", bval, sep = "")
}
}
if(markdown == F){
bval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", coefficient))
if(standardize == F){
b_report <- paste("b =", bval)
}
if(standardize == F){
b_report <- paste("beta", " = ", bval, sep = "")
}
}
return(noquote(b_report))
}
report_b(.1235, standardize = T)
report_b <- function(coefficient = NULL, markdown = T, standardize = F){
if(markdown == T){
if(standardize == F){
bval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", coefficient))
b_report <- paste("*b* =", bval)
}
if(standardize == F){
bval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", coefficient))
b_report <- paste("\beta", " = ", bval, sep = "")
}
}
if(markdown == F){
if(standardize == F){
bval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", coefficient))
b_report <- paste("b =", bval)
}
if(standardize == F){
bval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", coefficient))
b_report <- paste("beta", " = ", bval, sep = "")
}
}
return(noquote(b_report))
}
report_b(.1235, standardize = T)
report_b(.1235, standardize = F)
report_b <- function(coefficient = NULL, markdown = T, standardize = F){
if(markdown == T){
if(standardize == F){
bval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", coefficient))
b_report <- paste("*b* =", bval)
}
if(standardize == T){
bval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", coefficient))
b_report <- paste("\beta", " = ", bval, sep = "")
}
}
if(markdown == F){
if(standardize == F){
bval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", coefficient))
b_report <- paste("b =", bval)
}
if(standardize == T){
bval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", coefficient))
b_report <- paste("beta", " = ", bval, sep = "")
}
}
return(noquote(b_report))
}
report_b(.1235, standardize = F)
report_b(.1235, standardize = T)
report_b(.1235, standardize = T, markdown = F)
report_b(.1235, standardize = F, markdown = F)
x <- c(1:25)
y = c(1, 1, 2, 3, 4, 5, 6, 2, 4, 6, 7, 2, 7, 3, 1, 1, 1, 3, 4, 6, 7, 7, 1, 4, 1)
length(y)
model <- lm(y ~ x)
summary(model)
summary(model)$coefficients
summary(model)$coefficients[2, 1]
coef <- summary(model)$coefficients[2, 1]
report_b(coef, standardize = F, markdown = F)
library(devtools)
devtools::document()
library(report)
library(devtools)
devtools::document()
library(report)
library(devtools)
devtools::document()
devtools::document()
library(report)
devtools::document()
library(report)
devtools::document()
library(report)
rnorm(100, 50, 10)
g1 <- rnorm(100, 50, 10)
g2 <- rnorm(100, 55, 12)
t.test(g1, g2)
t.test(g1, g2)[1]
t.test(g1, g2)[1:3]
g1 <- rnorm(200, 50, 10)
g2 <- rnorm(200, 55, 12)
t.test(g1, g2)[1:3]
g1 <- rnorm(130, 50, 10)
g2 <- rnorm(130, 55, 12)
t.test(g1, g2)[1:3]
g1 <- rnorm(110, 50, 10)
g2 <- rnorm(110, 55, 12)
t.test(g1, g2)[1:3]
g1 <- rnorm(110, 50, 10)
g2 <- rnorm(110, 55, 12)
t.test(g1, g2)[1:3]
t.test(g1, g2, paired = T)[1:3]
t1 <- rnorm(110, 50, 10)
t2 <- rnorm(110, 55, 12)
t.test(g1, g2, paired = T)[1:3]
tresult <- t.test(g1, g2, paired = T)
tresults <- tresult
tresults[[1]]
tresults[[2]]
tresults[[3]]
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
tval <- tresults[[1]]
df <- tresults[[2]]
pval <- tresults[[3]]
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
tval
t_report <- paste("*t* =", tval)
t_report
# get t stat, convert to two decimal places, format report
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
tval <- tresults[[1]]
df <- tresults[[2]]
pval <- tresults[[3]]
# get t stat, convert to two decimal places, format report
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
t_report <- paste("*t*", round(df, 2), " = ", tval, sep = "")
t_report
t_report <- paste("*t*","(", round(df, 2), ")", " = ", tval, sep = "")
t_report
degfree <- tresults[[2]]
t_report <- paste("*t*","(", round(degfree, 0), ")", " = ", tval, sep = "")
t_report
pvalue <- tresults[[3]]
if(markdown == T){
# get t stat, df, convert to two decimal places, format report
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
t_report <- paste("*t*","(", round(degfree, 0), ")", " = ", tval, sep = "")
if(round(pvalue, 3) > 0){
pval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", pvalue))
p_report <- paste("p =", pval)
}
if(round(pvalue, 3) == 0){
p_report <- paste("p < .001")
}
}
if(round(pvalue, 3) > 0){
pval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", pvalue))
p_report <- paste("p =", pval)
}
p_report
# get t stat, df, convert to two decimal places, format report
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
t_report <- paste("*t*","(", round(degfree, 0), ")", " = ", tval, sep = "")
tval <- tresults[[1]]
degfree <- tresults[[2]]
pvalue <- tresults[[3]]
# get t stat, df, convert to two decimal places, format report
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
t_report <- paste("*t*","(", round(degfree, 0), ")", " = ", tval, sep = "")
if(round(pvalue, 3) > 0){
pval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", pvalue))
p_report <- paste("*p* =", pval)
}
if(round(pvalue, 3) == 0){
p_report <- paste("*p* < .001")
}
paste(t_report, p_report)
aste(t_report, ",", p_report)
paste(t_report, p_report, sep = ",")
paste(t_report, p_report, sep = ", ")
report_t <- function(tresults = NULL, markdown = T){
tval <- tresults[[1]]
degfree <- tresults[[2]]
pvalue <- tresults[[3]]
if(markdown == T){
# get t stat, df, convert to two decimal places, format report
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
t_report <- paste("*t*","(", round(degfree, 0), ")", " = ", tval, sep = "")
# get and format p-value
if(round(pvalue, 3) > 0){
pval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", pvalue))
p_report <- paste("*p* =", pval)
}
if(round(pvalue, 3) == 0){
p_report <- paste("*p* < .001")
}
# report the t statistic, df, and p-value together
full_report <- paste(t_report, p_report, sep = ", ")
}
if(markdown == F){
# get t stat, df, convert to two decimal places, format report
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
t_report <- paste("t","(", round(degfree, 0), ")", " = ", tval, sep = "")
# get and format p-value
if(round(pvalue, 3) > 0){
pval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", pvalue))
p_report <- paste("p =", pval)
}
if(round(pvalue, 3) == 0){
p_report <- paste("p < .001")
}
# report the t statistic, df, and p-value together
full_report <- paste(t_report, p_report, sep = ", ")
}
}
report_t(tresults = tresult)
report_t <- function(tresults = NULL, markdown = T){
tval <- tresults[[1]]
degfree <- tresults[[2]]
pvalue <- tresults[[3]]
if(markdown == T){
# get t stat, df, convert to two decimal places, format report
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
t_report <- paste("*t*","(", round(degfree, 0), ")", " = ", tval, sep = "")
# get and format p-value
if(round(pvalue, 3) > 0){
pval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", pvalue))
p_report <- paste("*p* =", pval)
}
if(round(pvalue, 3) == 0){
p_report <- paste("*p* < .001")
}
# report the t statistic, df, and p-value together
full_report <- paste(t_report, p_report, sep = ", ")
}
if(markdown == F){
# get t stat, df, convert to two decimal places, format report
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
t_report <- paste("t","(", round(degfree, 0), ")", " = ", tval, sep = "")
# get and format p-value
if(round(pvalue, 3) > 0){
pval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", pvalue))
p_report <- paste("p =", pval)
}
if(round(pvalue, 3) == 0){
p_report <- paste("p < .001")
}
# report the t statistic, df, and p-value together
full_report <- paste(t_report, p_report, sep = ", ")
}
return(full_report)
}
report_t(tresults = tresult)
report_t(tresults = tresult, markdown = F)
t1 <- rnorm(110, 50, 10)
t2 <- rnorm(110, 55, 12)
tresult <- t.test(g1, g2, paired = T)
tresults <- tresult
report_t <- function(tresults = NULL, markdown = T){
tval <- tresults[[1]]
degfree <- tresults[[2]]
pvalue <- tresults[[3]]
if(markdown == T){
# get t stat, df, convert to two decimal places, format report
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
t_report <- paste("*t*","(", round(degfree, 0), ")", " = ", tval, sep = "")
# get and format p-value
if(round(pvalue, 3) > 0){
pval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", pvalue))
p_report <- paste("*p* =", pval)
}
if(round(pvalue, 3) == 0){
p_report <- paste("*p* < .001")
}
# report the t statistic, df, and p-value together
full_report <- paste(t_report, p_report, sep = ", ")
}
if(markdown == F){
# get t stat, df, convert to two decimal places, format report
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
t_report <- paste("t","(", round(degfree, 0), ")", " = ", tval, sep = "")
# get and format p-value
if(round(pvalue, 3) > 0){
pval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", pvalue))
p_report <- paste("p =", pval)
}
if(round(pvalue, 3) == 0){
p_report <- paste("p < .001")
}
# report the t statistic, df, and p-value together
full_report <- paste(t_report, p_report, sep = ", ")
}
return(full_report)
}
report_t(tresults = tresult, markdown = F)
tresult <- t.test(g1, g2, paired = F)
tresults <- tresult
report_t <- function(tresults = NULL, markdown = T){
tval <- tresults[[1]]
degfree <- tresults[[2]]
pvalue <- tresults[[3]]
if(markdown == T){
# get t stat, df, convert to two decimal places, format report
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
t_report <- paste("*t*","(", round(degfree, 0), ")", " = ", tval, sep = "")
# get and format p-value
if(round(pvalue, 3) > 0){
pval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", pvalue))
p_report <- paste("*p* =", pval)
}
if(round(pvalue, 3) == 0){
p_report <- paste("*p* < .001")
}
# report the t statistic, df, and p-value together
full_report <- paste(t_report, p_report, sep = ", ")
}
if(markdown == F){
# get t stat, df, convert to two decimal places, format report
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
t_report <- paste("t","(", round(degfree, 0), ")", " = ", tval, sep = "")
# get and format p-value
if(round(pvalue, 3) > 0){
pval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", pvalue))
p_report <- paste("p =", pval)
}
if(round(pvalue, 3) == 0){
p_report <- paste("p < .001")
}
# report the t statistic, df, and p-value together
full_report <- paste(t_report, p_report, sep = ", ")
}
return(full_report)
}
report_t(tresults = tresult, markdown = F)
tresult <- t.test(t1, t2, paired = F)
tresults <- tresult
report_t <- function(tresults = NULL, markdown = T){
tval <- tresults[[1]]
degfree <- tresults[[2]]
pvalue <- tresults[[3]]
if(markdown == T){
# get t stat, df, convert to two decimal places, format report
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
t_report <- paste("*t*","(", round(degfree, 0), ")", " = ", tval, sep = "")
# get and format p-value
if(round(pvalue, 3) > 0){
pval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", pvalue))
p_report <- paste("*p* =", pval)
}
if(round(pvalue, 3) == 0){
p_report <- paste("*p* < .001")
}
# report the t statistic, df, and p-value together
full_report <- paste(t_report, p_report, sep = ", ")
}
if(markdown == F){
# get t stat, df, convert to two decimal places, format report
tval <- sub("^(-?)0.", "\\1.", sprintf("%.2f", tval))
t_report <- paste("t","(", round(degfree, 0), ")", " = ", tval, sep = "")
# get and format p-value
if(round(pvalue, 3) > 0){
pval <- sub("^(-?)0.", "\\1.", sprintf("%.3f", pvalue))
p_report <- paste("p =", pval)
}
if(round(pvalue, 3) == 0){
p_report <- paste("p < .001")
}
# report the t statistic, df, and p-value together
full_report <- paste(t_report, p_report, sep = ", ")
}
return(full_report)
}
report_t(tresults = tresult, markdown = F)
library(devtools)
devtools::document()
library(report)
library(report)
devtools::document()
library(report)
devtools::document()
library(report)
devtools::document()
library(report)
devtools::document()
library(report)
devtools::document()
x1 <- rnorm(110, 50, 10)
x1 <- rnorm(200, 50, 10)
x2 <- rnorm(200, 55, 12)
x1 <- rnorm(200, 10, 2)
x2 <- rnorm(200, 15, 1.5)
cor(t1, t2)
cor(x1, x2)
tresult <- corr(x1, x2)
cor(x1, x2)
report_p <- function(corcoef = NULL, markdown = T){
if(markdown == T){
rcoef <- sub("^(-?)0.", "\\1.", sprintf("%.3f", corcoef))
r_report <- paste("*r* =", rcoef)
}
if(markdown == F){
rcoef <- sub("^(-?)0.", "\\1.", sprintf("%.3f", corcoef))
r_report <- paste("r =", rcoef)
}
return(noquote(r_report))
}
report_r(r_coef)
report_r <- function(corcoef = NULL, markdown = T){
if(markdown == T){
rcoef <- sub("^(-?)0.", "\\1.", sprintf("%.3f", corcoef))
r_report <- paste("*r* =", rcoef)
}
if(markdown == F){
rcoef <- sub("^(-?)0.", "\\1.", sprintf("%.3f", corcoef))
r_report <- paste("r =", rcoef)
}
return(noquote(r_report))
}
report_r(r_coef)
x1 <- rnorm(200, 10, 2)
x2 <- rnorm(200, 15, 1.5)
r_coef <- cor(x1, x2)
report_r(r_coef)
library(report)
library(report)
devtools::document()
library(report)
devtools::document()
var <- rnorm(110, 21, 3.4)
var <- rnorm(110, 21, 3.4)
M_report <- paste("*M* =", round(mean(var, na.rm = T)))
M_report
M_report <- paste("*M* =", round(mean(var, na.rm = T), 2))
M_report
M_report <- paste("*M* =", sprintf('%.2f',var))
M_report
M_report <- paste("*M* =", sprintf('%.2f', mean(var, na.rm = T)))
M_report
var <- rnorm(110, 0, 3.4)
M_report <- paste("*M* =", sprintf('%.2f', mean(var, na.rm = T)))
M_report
var <- rnorm(110, 0, 3.4)
M_report <- paste("*M* =", sprintf('%.2f', mean(var, na.rm = T)))
M_report <- paste("*M* = ", sprintf('%.2f', mean(var, na.rm = T)),
", ", "*SD* = ", sprintf('%.2f', sd(var, na.rm = T)),
sep = "")
M_report
var <- rnorm(110, 200, 3.4)
M_report <- paste("*M* = ", sprintf('%.2f', mean(var, na.rm = T)),
", ", "*SD* = ", sprintf('%.2f', sd(var, na.rm = T)),
sep = "")
M_report
age <- rnorm(110, 21, 3.4)
report_msd <- function(var = NULL, markdown = T) {
if (markdown == T) {
MSD_report <- paste("*M* = ", sprintf('%.2f', mean(var, na.rm = T)),
", ", "*SD* = ", sprintf('%.2f', sd(var, na.rm = T)),
sep = "")
}
if (markdown == F) {
MSD_report <- paste("M = ", sprintf('%.2f', mean(var, na.rm = T)),
", ", "SD = ", sprintf('%.2f', sd(var, na.rm = T)),
sep = "")
}
return(noquote(MSD_report))
}
report_msd(age)
report_msd(age, markdown = F)
library(report)
devtools::document()
library(report)
library(report)
devtools::document()
library(report)
library(report)
devtools::install("durkeepk/report")
devtools::install_github("durkeepk/report")
library(report)
library(report)
